{"mappings":"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","sources":["dashboard/views-src/js/cron-tasks.js"],"sourcesContent":["import $ from 'jquery';\nimport dt from 'datatables.net-dt';\nimport * as dayjs from 'dayjs';\nimport advancedFormat from 'dayjs/plugin/advancedFormat';\ndayjs.extend(advancedFormat);\nconst utc = require('dayjs/plugin/utc');\nconst timezone = require('dayjs/plugin/timezone'); // dependent on utc plugin\ndayjs.extend(utc)\ndayjs.extend(timezone)\ndt();\nimport 'datatables.net-dt/css/jquery.dataTables.css';\n\nconst queryString = window.location.search;\nconst urlParams = new URLSearchParams(queryString);\nconst refreshInterval = urlParams.get('refreshInterval') || 30000\nif (urlParams.get('refresh')) {\n  window.setTimeout(function () {\n    window.location.reload();\n  }, parseInt(refreshInterval) * 1000);\n}\n\nlet cronTasksTable;\n\nloadTable();\n\nfunction loadTable () {\n  cronTasksTable = $('#tblCronTasks').DataTable({\n    // data: data,\n    ajax: './api/cron-tasks',\n    columns: [\n      {title: 'uuid', uuid: 'uuid', data: 'uuid',\n        render: colorJobId\n      },\n      {title: 'Job', data: 'job', defaultContent: ''},\n      {title: 'Job Id', data: 'data.id', defaultContent: ''},\n      {\n        title: \"Task Data\",\n        \"className\": 'details-control',\n        \"orderable\": false,\n        \"data\": null,\n        \"defaultContent\": '<input type=\"button\" class=\"btn btn-task-data\" value=\"Task Data\">'\n      },\n      {title: 'Created', defaultContent: '',\n        data: function (rec) {\n          return rec.status.created || rec.created\n        },\n        render: formatDate\n      },\n      {title: 'Schedule', data: 'when', defaultContent: '', render: formatWhen},\n      {title: 'Stopped/Activated',\n        data: function (rec) {\n          return Math.max(rec.status.restarted || 0, rec.status.stopped || 0) || '-'\n        },\n        defaultContent: '-', render: formatDate},\n      {title: 'Message',\n        data: function (rec) {\n          return rec.message || (rec.error && rec.error.message) || rec.error || '-'\n        },\n        defaultContent: '-'\n      },\n      {\n        title: 'Actions',\n        \"className\":      'details-control',\n        \"orderable\":      false,\n        \"data\":           null,\n        render: function (data, type, row) {\n          return data.isActive ? '<input class=\"btn btn-stop\" type=\"button\" value=\"Stop\">'\n            : '<input class=\"btn btn-activate\" type=\"button\" value=\"Activate\">';\n        }\n      }\n    ],\n    order: [[ 1, \"desc\" ]],\n    columnDefs:[{\n      targets: '_all',\n      createdCell: formatStatus\n    }]\n  })\n\n  $('#tblCronTasks tbody').on('click', '.btn-task-data', function () {\n    console.log('show task data');\n    var tr = $(this).closest('tr');\n    var row = cronTasksTable.row( tr );\n    var btn = this;\n      // var btn = $(this).find('input')\n      if ( row.child.isShown() ) {\n        // This row is already open - close it\n        row.child.hide();\n        tr.removeClass('shown');\n        $(btn).val('Task Data')\n      }\n      else {\n        // Open this row\n        //row.child( format(row.data()) ).show();\n        const task = row.data();\n        row.child('<pre> ' + JSON.stringify(task.data || 'No data', null, 4) + '</pre>').show();\n        tr.addClass('shown');\n        $(btn).val('Less')\n      }\n  });\n\n  $('#tblCronTasks tbody').on('click', '.btn-result', function () {\n    var tr = $(this).closest('tr');\n    var row = cronTasksTable.row( tr );\n    var btn = this;\n      // var btn = $(this).find('input')\n      if ( row.child.isShown() ) {\n        // This row is already open - close it\n        row.child.hide();\n        tr.removeClass('shown');\n        $(btn).val('Result')\n      }\n      else {\n        // Open this row\n        //row.child( format(row.data()) ).show();\n        const data = row.data();\n        row.child('<pre> ' + JSON.stringify(data || 'No result', null, 4) + '</pre>').show();\n        tr.addClass('shown');\n        $(btn).val('Less')\n      }\n  });\n\n  $('#tblCronTasks tbody').on('click', '.btn-stop', function () {\n    var tr = $(this).closest('tr');\n    var row = cronTasksTable.row( tr );\n    stopTask(row.data());\n  });\n\n  $('#tblCronTasks tbody').on('click', '.btn-activate', function () {\n    var tr = $(this).closest('tr');\n    var row = cronTasksTable.row( tr );\n    restartTask(row.data());\n  });\n}\n\n// render function to format date\nfunction formatDate (data, type, row) {\n  if (data === '-') return data\n  return data ? dayjs.tz(data, 'Asia/Kolkata').format('YYYY-MM-DD kk:mm:ss') : ''\n}\n\nfunction formatWhen (data, type, row) {\n  return data;\n}\nfunction colorJobId (data, type, row) {\n  let color\n  if (row.status.stopped) color = 'orange'\n  else color = '#03a652'\n  if (color) return `<span style=\"color:${color};font-weight:bold;\">${data}</span>`\n  else return data\n}\n\n// createCell functions\nfunction formatStatus (td, data, rowData, row, col) {\n  if (data === 'done') $(td).css('color', 'green')\n  if (data === 'error') $(td).css('color', 'red')\n  if (data === 'running') $(td).css('color', 'orange')\n}\n\n// stop the running task\nfunction stopTask(rowData) {\n  $.ajax({\n    method: 'PUT',\n    url: `./api/task/stop/${rowData.uuid}`,\n    cache: false\n  })\n  .done(function(data) {\n    cronTasksTable.ajax.reload(null, false);\n  })\n  .fail(function (resp) {\n    console.error('Error: ', resp.message);\n  })\n}\n\n// stop the running task\nfunction restartTask(rowData) {\n  $.ajax({\n    method: 'PUT',\n    url: `./api/task/restart/${rowData.uuid}`,\n    cache: false\n  })\n  .done(function(data) {\n    cronTasksTable.ajax.reload(null, false);\n  })\n  .fail(function (resp) {\n    console.error('Error: ', resp.message);\n  })\n}\n"],"names":["$6KOho","parcelRequire","$gngdn","extend","$parcel$interopDefault","$f6zku","$gogTx","$dLCGn","$kYsr5","$5626a043cee61102$var$queryString","window","location","search","$5626a043cee61102$var$urlParams","URLSearchParams","$5626a043cee61102$var$refreshInterval","get","$5626a043cee61102$var$cronTasksTable","$5626a043cee61102$var$formatDate","data","type","row","tz","format","$5626a043cee61102$var$formatWhen","$5626a043cee61102$var$colorJobId","color","status","stopped","$5626a043cee61102$var$formatStatus","td","rowData","col","css","setTimeout","reload","parseInt","DataTable","ajax","columns","title","uuid","render","defaultContent","className","orderable","rec","created","Math","max","restarted","message","error","isActive","order","columnDefs","targets","createdCell","on","console","log","tr","this","closest","child","isShown","hide","removeClass","val","task","JSON","stringify","show","addClass","method","url","cache","done","fail","resp"],"version":3,"file":"cron-tasks.7e2980d3.js.map"}